name: Build

on:
  push:
    branches: [dev]
  release:
      types: [created]

env:
  APP_NAME: mediadc

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    name: Build, sign and package app
    strategy:
      matrix:
        php-versions: ['7.4', '8.0']
        nextcloud: ['stable21', 'stable22']
        database: ['sqlite']

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: pdo_sqlite,pdo_mysql,pdo_pgsql,gd,zip,openssl
          coverage: none

      - name: Set up server non MySQL
        uses: SMillerDev/nextcloud-actions/setup-nextcloud@fae87e29aa7cdf1ea0b8033c67f60e75b10be2cd
        with:
          cron: false
          version: ${{ matrix.nextcloud }}
          database-type: ${{ matrix.database }}

      - name: Install Krankerl
        run: |
          wget https://github.com/ChristophWurst/krankerl/releases/download/v0.13.0/krankerl_0.13.0_amd64.deb
          sudo dpkg -i krankerl_0.13.0_amd64.deb

      - name: Package app
        run: krankerl package
      - uses: actions/upload-artifact@v2
        with:
          name: tarball
          path: build/artifacts/${{ env.APP_NAME }}.tar.gz
          if-no-files-found: error

      - name: Setup and Build frontend
        run: make

      - name: Configure server with app
        uses: SMillerDev/nextcloud-actions/setup-nextcloud-app@fae87e29aa7cdf1ea0b8033c67f60e75b10be2cd
        with:
          app: ${{ env.APP_NAME }}
          check-code: false

      # - name: Create signed release archive
      #   run: |
      #     cd ../server/apps/${{ env.APP_NAME }} && make appstore
      #   env:
      #     app_private_key: ${{ secrets.APP_PRIVATE_KEY }}
      #     app_public_crt: ${{ secrets.APP_PUBLIC_CRT }}

      # - name: Print working directory
      #   run: |
      #     pwd
      #     ls -l
      #     ls ../ -l
      #     ls ../server/ -l

      # - name: Upload app tarball to release
      #   uses: svenstaro/upload-release-action@v2
      #   id: attach_to_release
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: ../server/apps/${{ env.APP_NAME }}/build/artifacts/appstore/${{ env.APP_NAME }}.tar.gz
      #     asset_name: ${{ env.APP_NAME }}.tar.gz
      #     tag: ${{ github.ref }}
      #     overwrite: true

      # - name: Upload app to Nextcloud appstore
      #   uses: R0Wi/nextcloud-appstore-push-action@v2
      #   with:
      #     app_name: ${{ env.APP_NAME }}
      #     appstore_token: ${{ secrets.APPSTORE_TOKEN }}
      #     download_url: ${{ steps.attach_to_release.outputs.browser_download_url }}
      #     app_private_key: ${{ secrets.APP_PRIVATE_KEY }}
      #     nightly: ${{ github.event.release.prerelease }}

      # - name: Delete crt and key from local storage
      #   run: rm -f ~/.nextcloud/certificates/*