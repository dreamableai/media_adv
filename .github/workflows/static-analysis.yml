name: Static analysis

on:
  pull_request:
    branches: [main, test, dev]
    types: [opened]
  push:
    branches: [dev]
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      php_src: ${{ steps.filter.outputs.php_src }}
      js_src: ${{ steps.filter.outputs.js_src }}
      py_src: ${{ steps.filter.outputs.py_src }}
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        base: ${{ github.ref }}
        filters: |
          php_src:
            - '**/*.php'
          js_src:
            - '*.js'
            - '**/*.js'
          py_src:
            - 'lib/Service/python/**'
            - 'lib/Service/python/*.py'

  linters-php:
    needs: changes
    if: ${{ needs.changes.outputs.php_src == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: [7.4, 8.0]
    steps:
    - uses: actions/checkout@v2

    - name: Setup php${{ matrix.php-versions }}
      uses: shivammathur/setup-php@master
      with:
        php-version: ${{ matrix.php-versions }}
        tools: composer:v2
        coverage: none

    - name: PHP Lint
      run: composer run lint

  linters-js:
    needs: changes
    if: ${{ needs.changes.outputs.js_src == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    name: ESLint
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: npm ci

      - name: ESLint
        run: npm run lint

  linters-python:
    needs: changes
    if: ${{ needs.changes.outputs.py_src == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    name: PyLint
    steps:
      - uses: actions/checkout@v2

      - name: pylint installation
        run: |
          python -m pip install --upgrade pip
          pip install pylint

      - name: pylint analysis
        run: |
           pylint --rcfile .pylintrc lib/Service/python/*

  security-analysis:
    needs: [changes, linters-php]
    if: ${{ needs.changes.outputs.php_src == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    name: Security analysis
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Psalm
        uses: docker://vimeo/psalm-github-actions:4.9.3
        with:
          security_analysis: true
          composer_ignore_platform_reqs: false
          report_file: results.sarif

      - name: Upload Security Analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif

  psalm-analysis:
    needs: [changes, linters-php]
    if: ${{ needs.changes.outputs.php_src == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    strategy:
        matrix:
          ocp-version: [ 'dev-master', 'dev-stable21', 'dev-stable22' ]
    name: Psalm statis-analysis
    steps:
      - uses: actions/checkout@v2

      - name: Set up php
        uses: shivammathur/setup-php@master
        with:
          php-version: 7.4
          tools: composer:v2
          coverage: none

      - name: Install dependencies
        run: composer i

      - name: Install dependencies
        run: composer require --dev christophwurst/nextcloud:${{ matrix.ocp-version }}

      - name: Run coding standards check
        run: composer run psalm

  npm-audit:
    needs: [changes, linters-js]
    if: ${{ needs.changes.outputs.js_src == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    name: npm-audit
    steps:
      - uses: actions/checkout@v2

      - name: Audit
        run: npm audit

  checks_status:
    needs: [changes, linters-php, linters-js, linters-python, security-analysis, psalm-analysis, npm-audit]
    if: ${{ always() && contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) }}
    name: checks-status
    runs-on: ubuntu-latest
    steps:
      - name: Checks passed
        run: echo "Checks passed"
